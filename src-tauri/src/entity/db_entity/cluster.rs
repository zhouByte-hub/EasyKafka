//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "cluster")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,

    #[serde(rename = "bootstrapServers")]
    pub servers: String,

    #[serde(rename = "name")]
    pub cluster_name: String,

    #[serde(rename = "saslUsername")]
    pub username: Option<String>,

    #[serde(rename = "saslPassword")]
    pub password: Option<String>,
    pub timeout: i32,

    #[serde(rename = "sslEnabled")]
    pub ssl: bool,

    #[serde(rename = "saslMechanism")]
    pub sasl: Option<String>,

    #[serde(rename = "isActive")]
    pub connected: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
